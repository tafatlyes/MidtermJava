Please answer the below Data Structure Questions:

why do we need data structure?
Ans : Data structures are used in computing to make it easy to locate and retrieve information.

What are the various operations that can be performed on different Data Structures?
Ans : Insertion − Add a new data item in the data structure .
      Deletion − Delete an existing data item from the data structure.
      Traversal − Access each data item exactly once so that it can be processed.
      Searching − Find out the location of the data item if it exists in the data structure
      Sorting − Arranging the data items in some order.


List out the areas in which data structures are applied extensively?
Ans :  - Compiler Design,
       - Operating System,
       - Database Management System,
       - Statistical analysis package,
       - Numerical Analysis,
       - Graphics,
       - Artificial Intelligence,
       - Simulation

what is an Array?
Ans : An array is a container object that holds a fixed number of values of a single type.
      The length of an array is established when the array is created.
      Each item in an array is called an element, and each element is accessed by its numerical index.

what is the difference between the Array and ArrayList?
Ans : Array is a fixed length data structure whereas ArrayList is a variable length Collection class.
      We cannot change length of array once created in Java but ArrayList can be changed.
      We cannot store primitives in ArrayList, it can only store objects. But array can contain both primitives and objects in Java.

what is LinkedList?
Ans : The LinkedList class is a collection which can contain many objects of the same type, just like the ArrayList .
      The LinkedList class has all of the same methods as the ArrayList class because they both implement the List interface.

How is an Array different from Linked List?
Ans : - An array element is having index number, but a node is having reference to next node.
      - In array each element is independent, does not have any connection to the other element
        on the other hand in linked list each node are connected by previous node.
      - In Linked list, location or address of elements is stored in the link part of previous
        element/node. In array, no pointers are used like linked list, so no need of extra space
        in memory for pointer.
      - Linked list consumed extra memory as the link location need to be saved in in the linked
        part of the previous elements in case of array it is not required.

what is queue?
Ans : Java Queue is an interface available in java.util package and extends java.util.Collection interface.
      Just like Java List, Java Queue is a collection of ordered elements (Or objects) but it performs insert and
      remove operations differently. We can use Queue to store elements before processing those elements.

what is stack?
Ans : A Stack is a Last In First Out (LIFO) data structure. It supports two basic operations called push and pop.
      The push operation adds an element at the top of the stack, and the pop operation removes an element from the top of the stack.
      Java provides a Stack class which models the Stack data structure.

what is FIFO and LIFO?
Ans : FIFO: First in First out.
      LIFO: Last in First out.

what is the order of complexity?
Ans : Let's take an example of an input of size N, we can say that the algorithm will finish at O(N), O(N^2), O(N^3), O(N*log(N)) etc.
      This means that it is a certain mathematical expression of the size of the input, and the algorithm finishes between
      two factors of it. Generally, the smaller the order of complexity of the program's underlying algorithm, the faster
      it will run and the better it will scale as the input gets larger. Thus, we should often seek more efficient
      algorithms in order to reduce the order of complexity.

what is the best case to search an element from an array?
Ans : Binary search & sorting algorithm.

what is the worst case to search an element from an array?
Ans : For an unsorted array, we have to search element by element, until the element is found or array is completely
       traversed. Element can be at 1st position, the last position or somewhere in between. The worst case arises when
       the element is at last position or not in the array, therefore we have to traverse the whole array giving n no.
       of repetitions over loop. Therefore the worst case time complexity is O(n).

what is tree in data structure?
Ans : A tree is a nonlinear data structure whereas arrays, linked lists, stacks and queues are linear data structures.
      It can be empty of nodes or a tree can be a structure consisting of one node called the root and zero or one or more
      sub-trees.

what is graph in data structure?
Ans : A Graph is a non-linear data structure consisting of nodes and edges. The nodes are sometimes also referred to as
      vertices and the edges are lines or arcs that connect any two nodes in the graph. For example, in Facebook,
      each person is represented with a vertex(or node). Each node is a structure and contains information like
      person id, name, gender, locale etc.

what is the difference between the HashTable and HashMap?
Ans : HashTable is synchronized, HashMap is not. Therefore it makes HashMap efficient with non-threaded applications
      because unsynchronized objects perform better than synchronized objects. HashTable do not allow null keys or values
      where HashMap does allow one null key and unlimited null values.

What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.
Ans : RDBMS - Array
      Network data model - Graph
      Hierarchical data model - Trees

How HashMap works in java?
Ans : A HashMap element has key and value in Java, elements are stored against a key. Map Interface implemented on HashMap
      in Java Collection Framework. elements manipulation is easy on the basis of key of the value.

What is ArrayIndexOutOfBoundsException in java? When it occurs?
Ans : The ArrayIndexOutOfBounds exception is thrown if a program tries to access an array index that is negative, greater than,
      or equal to the length of the array. The ArrayIndexOutOfBounds exception is a run-time exception. Java's compiler does not
      check for this error during compilation.

What are the different ways of copying an array into another array?
Ans : There are mainly four different ways to copy all elements of one array into another array in Java.
      - Manually.
      - Arrays.copyOf()
      - System.arraycopy()
      - Object.clone()

What is difference between an array and a linked list?
Ans : - An array element is having index number, but a node is having reference to next node.
      - In array each element is independent, does not have any connection to the other element
        on the other hand in linked list each node are connected by previous node.
      - In Linked list, location or address of elements is stored in the link part of previous
        element/node. In array, no pointers are used like linked list, so no need of extra space
        in memory for pointer.
      - Linked list consumed extra memory as the link location need to be saved in in the linked
        part of the previous elements in case of array it is not required.
      - An array functions by contiguous memory locations allocated at compile time, i.e. at the
        time of declaration of array. However, a linked list memory is assigned when data is added
        to it which means at runtime.


What is DFS and BFS?
Ans : Depth-first search (DFS) is an algorithm for traversing or searching tree or graph data structure.
      This one starts at the root and explores as far as possible along each branch before backtracking.
      Breadth-first search (BFS) is an algorithm for traversing or searching tree or graph data structure.
      It starts at the tree roots and explores the neighbour nodes first before visiting to the next level of neighbours.

What is Recursion?
Ans : It is the process where a method calls itself inside the method. he method which causes recursion is called
      recursive method.

What are linear and non linear data Structures?
Ans : Linear Data Structures: The data structure where data items are organized sequentially or linearly where data
      elements attached one after another is called linear data structure.
      Examples of linear data structures are Arrays, Stack, Queue and Linked List.
      Non Linear Data Structures: The data structure where data items are not organized sequentially is called non
      linear data structure. Examples of non linear data structures are Trees and Graphs.

What is Big-(O)-notation?
Ans : Big O notation is used in Computer Science to describe the performance or complexity of an algorithm. Big O
      specifically describes the worst-case scenario, and can be used to describe the execution time required (how long
      algorithm will take to run) or the space used (e.g. in memory or on disk) by an algorithm.


Outlined different kind of sorting algorithm with time complexity?
Ans :  1. Bubble sort: It is a comparison algorithm. It works by repeatedly stepping
         through the list to be sorted, comparing each pair of adjacent items and swapping them
         if they are in the wrong order. The pass through the list is repeated until no swaps are
         needed, which indicates that the list is sorted.
         Worst case performance: O(n2)
         Best case performance: O(n)
         Average case performance: O(n2)
         Worst case space complexity: O(n) total, O(1) auxiliary
         Bubble sort is not a practical sorting algorithm when n is large.

       2.Selection sort: It is an in-place comparison sort.Selection sort is noted for its simplicity,
         and also has performance advantages over more complicated algorithms in certain situations.
         Worst case performance: O(n2)
         Best case performance: O(n2)
         Average case performance: O(n2)
         Worst case space complexity: O(n) total, O(1) auxiliary

       3.Insertion sort: It is a comparison sort in which the sorted array (or list) is built one entry
         at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort,
         heapsort, or merge sort.
         Worst case performance: O(n2)
         Best case performance: O(n)
         Average case performance: O(n2)
         Worst case space complexity: O(n) total, O(1) auxiliary

       4. Merge sort: It is an O(n log n) comparison-based sorting algorithm.
         Worst case performance: O(n log n)
         Best case performance: O(n log n) typical
         Average case performance: O(n log n)
         Worst case space complexity: O(n) total, O(n) auxiliary

        5.Quick sort: It is similar to merge sort in many ways. It divides the elements to be sorted into
         two groups, sorts the two groups by recursive calls, and combines the two sorted groups into
         a single array of sorted values.
         The choice of a good pivot element is critical to the efficiency of the quicksort algorithm.
         If we can ensure that the pivot element is near the median of the array values, then quicksort is very efficient.
         on average, makes O(n log n) comparisons to sort n items, in the worst case, it makes O(n2) comparisons


Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a)In terms of Accessing element.
  b)In terms of Inserting element.
  c)In terms of Searching element.
  d)In terms of Removing element.